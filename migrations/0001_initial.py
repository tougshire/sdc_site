# Generated by Django 4.2.4 on 2024-03-07 17:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The name of the article.', max_length=100, verbose_name='title')),
                ('iframe_src', models.CharField(blank=True, help_text='If an iframe is to be displayed, the URL of an approved iframe source (must be listed in settings), optionally followed by a css height value', max_length=255, verbose_name='iframe source')),
                ('content_classes', models.CharField(blank=True, default='article-content uldoc', help_text='HTML classes to be applied to the content (default: article-content uldoc)', max_length=255, null=True)),
                ('content_format', models.CharField(choices=[('markdown', 'Markdown'), ('html', 'HTML'), ('plaintext', 'Plain Text')], default='markdown', help_text='The format used for rendering the content', max_length=12)),
                ('content', models.TextField(blank=True, help_text='The content of the case.  Expected to usually include an iframe or series of iframes')),
                ('order', models.IntegerField(default=0, help_text='The order that the article would appear in the case', verbose_name='order')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'ordering': ('order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the case.', max_length=100, verbose_name='name')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
                ('width', models.IntegerField(default=1, help_text='The width of the case in multiples of how big it is compared to the narrowest case', verbose_name='width')),
                ('content_above_articles', models.CharField(blank=True, help_text='The content of the case above any included articles', max_length=255)),
                ('content_below_articles', models.CharField(blank=True, help_text='The content of the case below any included articles', max_length=255)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The label of this menu item', max_length=30, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the page.', max_length=100, verbose_name='title')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
                ('order', models.IntegerField(default=0, help_text='The order that the page would appear in a list', verbose_name='order')),
            ],
            options={
                'ordering': ('order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the site.', max_length=100, verbose_name='name')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the tag.', max_length=100, verbose_name='name')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the section.', max_length=100, verbose_name='name')),
                ('slug', models.SlugField(help_text='The slug for use in URLs', max_length=100, unique=True, verbose_name='slug')),
                ('order', models.IntegerField(default=0, help_text='The order that the section should appear on the page', verbose_name='order')),
                ('content_before', models.TextField(blank=True, help_text='content to be displayed above the cases')),
                ('content_after', models.TextField(blank=True, help_text='content to be displayed below the cases')),
                ('page', models.ForeignKey(blank=True, help_text='The page to which this section belongs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.page')),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.AddField(
            model_name='page',
            name='site',
            field=models.ForeignKey(blank=True, help_text='The site to which this page belongs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.site'),
        ),
        migrations.CreateModel(
            name='MenuPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(help_text='The menu that is attached to this page', on_delete=django.db.models.deletion.CASCADE, to='sdc_site.menu')),
                ('page', models.ForeignKey(help_text='The page that this menu is attached to ', on_delete=django.db.models.deletion.CASCADE, to='sdc_site.page')),
            ],
        ),
        migrations.CreateModel(
            name='Menuitem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(blank=True, help_text='The URL that this menu item points to', max_length=255, verbose_name='href')),
                ('label', models.CharField(blank=True, help_text='The label of this menu item', max_length=30, verbose_name='label')),
                ('order', models.IntegerField(help_text='The order that the item would appear in a menu', verbose_name='order')),
                ('menu', models.ForeignKey(blank=True, help_text='The menu to which this item belongs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.menu')),
            ],
        ),
        migrations.CreateModel(
            name='CaseArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.article')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.case')),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='section',
            field=models.ForeignKey(blank=True, help_text='The section to which the case belongs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sdc_site.section'),
        ),
    ]
